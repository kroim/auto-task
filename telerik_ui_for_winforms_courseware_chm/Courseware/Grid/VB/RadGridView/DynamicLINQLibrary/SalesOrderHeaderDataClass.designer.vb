'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.34011
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="AdventureWorks")>  _
Partial Public Class SalesOrderHeaderDataClassDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertSalesOrderHeader(instance As SalesOrderHeader)
    End Sub
  Partial Private Sub UpdateSalesOrderHeader(instance As SalesOrderHeader)
    End Sub
  Partial Private Sub DeleteSalesOrderHeader(instance As SalesOrderHeader)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.Settings.Default.AdventureWorksConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property SalesOrderHeaders() As System.Data.Linq.Table(Of SalesOrderHeader)
		Get
			Return Me.GetTable(Of SalesOrderHeader)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="Sales.SalesOrderHeader")>  _
Partial Public Class SalesOrderHeader
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _SalesOrderID As Integer
	
	Private _OrderDate As Date
	
	Private _SubTotal As Decimal
	
	Private _TaxAmt As Decimal
	
	Private _Freight As Decimal
	
	Private _TotalDue As Decimal
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSalesOrderIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnSalesOrderIDChanged()
    End Sub
    Partial Private Sub OnOrderDateChanging(value As Date)
    End Sub
    Partial Private Sub OnOrderDateChanged()
    End Sub
    Partial Private Sub OnSubTotalChanging(value As Decimal)
    End Sub
    Partial Private Sub OnSubTotalChanged()
    End Sub
    Partial Private Sub OnTaxAmtChanging(value As Decimal)
    End Sub
    Partial Private Sub OnTaxAmtChanged()
    End Sub
    Partial Private Sub OnFreightChanging(value As Decimal)
    End Sub
    Partial Private Sub OnFreightChanged()
    End Sub
    Partial Private Sub OnTotalDueChanging(value As Decimal)
    End Sub
    Partial Private Sub OnTotalDueChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SalesOrderID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property SalesOrderID() As Integer
		Get
			Return Me._SalesOrderID
		End Get
		Set
			If ((Me._SalesOrderID = value)  _
						= false) Then
				Me.OnSalesOrderIDChanging(value)
				Me.SendPropertyChanging
				Me._SalesOrderID = value
				Me.SendPropertyChanged("SalesOrderID")
				Me.OnSalesOrderIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrderDate", DbType:="DateTime NOT NULL")>  _
	Public Property OrderDate() As Date
		Get
			Return Me._OrderDate
		End Get
		Set
			If ((Me._OrderDate = value)  _
						= false) Then
				Me.OnOrderDateChanging(value)
				Me.SendPropertyChanging
				Me._OrderDate = value
				Me.SendPropertyChanged("OrderDate")
				Me.OnOrderDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubTotal", DbType:="Money NOT NULL")>  _
	Public Property SubTotal() As Decimal
		Get
			Return Me._SubTotal
		End Get
		Set
			If ((Me._SubTotal = value)  _
						= false) Then
				Me.OnSubTotalChanging(value)
				Me.SendPropertyChanging
				Me._SubTotal = value
				Me.SendPropertyChanged("SubTotal")
				Me.OnSubTotalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaxAmt", DbType:="Money NOT NULL")>  _
	Public Property TaxAmt() As Decimal
		Get
			Return Me._TaxAmt
		End Get
		Set
			If ((Me._TaxAmt = value)  _
						= false) Then
				Me.OnTaxAmtChanging(value)
				Me.SendPropertyChanging
				Me._TaxAmt = value
				Me.SendPropertyChanged("TaxAmt")
				Me.OnTaxAmtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Freight", DbType:="Money NOT NULL")>  _
	Public Property Freight() As Decimal
		Get
			Return Me._Freight
		End Get
		Set
			If ((Me._Freight = value)  _
						= false) Then
				Me.OnFreightChanging(value)
				Me.SendPropertyChanging
				Me._Freight = value
				Me.SendPropertyChanged("Freight")
				Me.OnFreightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalDue", AutoSync:=AutoSync.Always, DbType:="Money NOT NULL", IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property TotalDue() As Decimal
		Get
			Return Me._TotalDue
		End Get
		Set
			If ((Me._TotalDue = value)  _
						= false) Then
				Me.OnTotalDueChanging(value)
				Me.SendPropertyChanging
				Me._TotalDue = value
				Me.SendPropertyChanged("TotalDue")
				Me.OnTotalDueChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
